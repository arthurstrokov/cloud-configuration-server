plugins {
    id 'org.springframework.boot' version '2.7.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-spring-boot-application' version '8.1.0'
}

group = 'com.gmail.arthurstrokov'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/snapshot' }
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    set('springCloudVersion', "2021.0.3-SNAPSHOT")
}

dependencies {
    implementation 'org.springframework.cloud:spring-cloud-config-server'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'net.logstash.logback:logstash-logback-encoder:7.2'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'

    implementation 'org.springframework.boot:spring-boot-devtools'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    minHeapSize = "128m" // initial heap size
    maxHeapSize = "256m" // maximum heap size
    jvmArgs '-XX:+PrintGC' // mem argument for the test JVM
}

docker {
    springBootApplication {
        baseImage = 'openjdk:17-alpine'
        ports = [8888]
        images = [
                'arthurstrokov/cloud-configuration-server:latest',
                  'arthurstrokov/cloud-configuration-server:v0.0.0'
        ]
        jvmArgs = ['-Xmx2048m']
    }
}
